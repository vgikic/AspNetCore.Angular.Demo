import { Action } from "@ngrx/store";
import { ItemDto } from "../../_autogenerated/itemDto";
import { HttpErrorResponse } from "@angular/common/http";

export enum ItemsActionTypes {

    Load = '[Items] Load',
    LoadSuccess = '[Items] Load Success',

    GetById = '[Items] Get By Id',
    GetByIdSuccess = '[Items] Get By Id Success',

    SetSelectedItem = '[Items] Set Selected Item',

    GetBadRequest = '[Items] Bad Request',
    GetBadRequestSuccess = '[Items] Bad Request Success (never gonna happen)',

    FailedAction = '[Items] Failed'

}

export class Load implements Action {
    readonly type = ItemsActionTypes.Load;
}

export class LoadSuccess implements Action {
    readonly type = ItemsActionTypes.LoadSuccess;
    constructor(public payload: ItemDto[]) { }
}

export class GetById implements Action {
    readonly type = ItemsActionTypes.GetById;
    constructor(public payload: number) { }
}

export class GetByIdSuccess implements Action {
    readonly type = ItemsActionTypes.GetByIdSuccess;
    constructor(public payload: ItemDto) { }
}

export class SetSelectedItem implements Action {
    readonly type = ItemsActionTypes.SetSelectedItem;
    constructor(public payload: ItemDto) { }
}

export class GetBadRequest implements Action {
    readonly type = ItemsActionTypes.GetBadRequest;
}

export class GetBadRequestSuccess implements Action {
    readonly type = ItemsActionTypes.GetBadRequest;
    constructor(public payload: any) { }
}


export class FailedAction implements Action {
    readonly type = ItemsActionTypes.FailedAction;
    constructor(public payload: HttpErrorResponse) { }
}

export type ItemsActions = Load
    | LoadSuccess
    | GetById
    | GetByIdSuccess
    | FailedAction
    | SetSelectedItem
    | GetBadRequest
