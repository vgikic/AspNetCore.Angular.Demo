import { Injectable } from "@angular/core";
import { HttpClient } from "@angular/common/http";
import { ItemDto } from "../_autogenerated/itemDto";
import { ItemsApiService } from "../_autogenerated/itemsApi.service";
import { PartDto } from "../_autogenerated/partDto";
import { of } from "rxjs";
import { CategoryDto } from "../_autogenerated/categoryDto";
import { map } from "rxjs/operators";
import { IJsonPatchObject } from "../models/interfaces";
import { ItemBindingModel } from "../_autogenerated/itemBindingModel";
import { LoginBindingModel } from "../_autogenerated/loginBindingModel";
import { AuthenticationApiService } from "../_autogenerated/authenticationApi.service";
import { UserAuthDto } from "../_autogenerated/userAuthDto";

@Injectable({ providedIn: 'root' })
export class AuthenticationService {

    public userAuth: UserAuthDto;

    constructor(
        private httpClient: HttpClient,
        private authApiService: AuthenticationApiService) {
    }

    public login = (model: LoginBindingModel) =>
        this.httpClient.post<UserAuthDto>(this.authApiService.Url_LoginAsync(), model).pipe(
            map(response => {
                this.userAuth = response;
                return response;
            })
        );

    public register = (model: LoginBindingModel) =>
        this.httpClient.post<UserAuthDto>(this.authApiService.Url_RegisterAsync(), model);

    public logOut = () =>
        this.httpClient.get<void>(this.authApiService.Url_LogOutAsync()).pipe(
            map(response => {
                this.userAuth = null;
                return response;
            })
        )

}